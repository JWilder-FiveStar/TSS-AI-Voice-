plugins {
    id 'java'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.runelite.net'
        content {
            includeGroupByRegex("net\\.runelite.*")
        }
    }
    mavenCentral()
}

group = 'com.example'
version = '1.0-SNAPSHOT'

java {
    toolchain {
    languageVersion = JavaLanguageVersion.of(11)
    }
}

dependencies {
    // Build against the same RuneLite client version observed at runtime (1.11.16)
    compileOnly 'net.runelite:client:1.11.16'

    implementation 'com.amazonaws:aws-java-sdk-polly:1.12.300'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'org.apache.commons:commons-configuration2:2.10.1'
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    // MP3 decoding fallback for ElevenLabs when WAV isn't returned (Central-hosted)
    implementation 'com.googlecode.soundlibs:jlayer:1.0.1-1'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // For the dev runner in test sources
    testImplementation 'net.runelite:client:1.11.16'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(11)
}

// We need a self-contained jar when dropping into the external plugins folder because
// RuneLite's external plugin loader does NOT provide third-party libraries (AWS, Jackson, etc.).
// Replace the default thin jar with a fat jar under the SAME filename so existing copy tasks keep working.
tasks.named('jar') {
    // Disable the original thin jar behavior (we'll rebuild contents below)
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest { attributes('Main-Class': 'com.example.osrstts.OsrsTtsPlugin', 'Multi-Release': true) }
    doFirst {
        // Clear any previous contents to avoid mixing thin + fat
        archiveClassifier.set("")
    }
    from ({
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }) {
        // Exclude signature/indices to avoid warnings
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        exclude '**/module-info.class'
    }
    // Bundle quest-voices JSON files into the jar so we can extract at runtime
    from('quest-voices') {
        into 'quest-voices'
        include '**/*.json'
    }
}

// Convenience alias (optional) if someone still wants to invoke fatJar explicitly
tasks.register('fatJar') {
    dependsOn tasks.named('jar')
    group = 'build'
    description = 'Alias â€“ builds the (already fat) jar.'
}

// Temporary diagnostic task: lists entries related to plugin descriptor & main class
tasks.register('inspectPluginJar') {
    dependsOn tasks.named('jar')
    doLast {
        def jarFile = tasks.named('jar').get().archiveFile.get().asFile
        println "Inspecting jar: ${jarFile} (size=${jarFile.length()} bytes)"
        def zip = new java.util.zip.ZipFile(jarFile)
        def hits = []
        zip.entries().each { e ->
            if (e.name.toLowerCase().contains('runelite-plugin.properties') || e.name.contains('OsrsTtsPlugin.class') || e.name.startsWith('quest-voices/')) {
                hits << e.name
            }
        }
        println 'Matched entries:'
        hits.each { println '  ' + it }
        if (hits.isEmpty()) println '  (none)'
        zip.close()
    }
}

// Dev-run task that mirrors the template's run-test approach
tasks.register('runPlugin', JavaExec) {
    group = 'run'
    description = 'Launch RuneLite with this plugin loaded via ExternalPluginManager (template-style)'
    dependsOn testClasses
    mainClass = 'com.example.osrstts.OsrsTtsPluginTest'
    classpath = sourceSets.test.runtimeClasspath
    // Force RuneLite to use your real userhome so credentials.properties is picked up
    def userHome = System.getProperty('user.home').replace('\\', '/')
    jvmArgs '-ea', '-Duser.country=US', '-Duser.language=en', '-Xmx2048m', '-Xms512m', '-XX:+UseG1GC', "-Drunelite.userhome=${userHome}/.runelite", '-Dosrs.tts.debug=true'
}
